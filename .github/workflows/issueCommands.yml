on: issue_comment
name: Issue Development Commands
jobs:
  check_release_command:
    name: Check comments for /release commands
    runs-on: ubuntu-18.04
    steps:
        - name: Check for Command
          id: releaseCommand
          uses: xt0rted/slash-command-action@v1
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            command: release
            reaction: "false"
            allow-edits: "false"
            permission-level: admin
        - name: Check out code
          uses: actions/checkout@master
        - name: Build renpy project
          uses: ProjectAliceDev/renpy-build-action@master
          with:
            project-dir: '.'
          env:
            SDL_AUDIODRIVER: dummy
            SDL_VIDEODRIVER: dummy
        - run: |
            mkdir BuildArtifacts
            cp renplate-*-dists/renplate-*-linux.tar.bz2 renplate-linux.tar.bz2
            cp renplate-*-dists/renplate-*-mac.zip renplate-mac.zip
            cp renplate-*-dists/renplate-*-pc.zip renplate-pc.zip

        - uses: "marvinpinto/action-automatic-releases@latest"
          with:
             repo_token: "${{ secrets.GITHUB_TOKEN }}"
             automatic_release_tag: "latest"
             prerelease: true
             title: "Development Build"
             files: |
               renplate-pc.zip
               renplate-mac.zip
               renplate-linux.tar.bz2
        - name: Reply to comment
          uses: actions/github@v1.0.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            args: comment "üéâ New development release pushed"

  check_init_command:
    name: Check comments for /initialize commands
    runs-on: ubuntu-18.04
    steps:
        - name: Check for Command
          id: initCommand
          uses: xt0rted/slash-command-action@v1
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            command: initialize
            reaction: "false"
            allow-edits: "false"
            permission-level: admin
        - name: Check out code
          uses: actions/checkout@master
        - name: Run Labeler
          if: success()
          uses: crazy-max/ghaction-github-labeler@v1
          with:
            yaml_file: .github/labels.yml
            skip_delete: false
            dry_run: false
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Reply to comment
          uses: actions/github@v1.0.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            args: comment "üèÅ Repository Successfully Initialized"

  check_deploy_command:
    name: Check comments for /deploy commands
    runs-on: ubuntu-18.04
    steps:
        - name: Check for Command
          id: deployCommand
          uses: xt0rted/slash-command-action@v1
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            command: initialize
            reaction: "false"
            allow-edits: "false"
            permission-level: admin
        - name: Check out code
          uses: actions/checkout@master
    - name: Setup mdBook
      uses: peaceiris/actions-mdbook@v1
      with:
        mdbook-version: 'latest'

    - run: mdbook build guide
    - run: mdbook build design

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v2
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs
    - name: Reply to comment
      uses: actions/github@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: comment "üìö Documentation Successfully Deployed"
